


#This is the main algorithm to call

guidedMCMC <- function(n, lambda, start, algorithm, dim = 1){
  

  #Check inputs for errors
  initialErrorCatch(n, lambda, start, algorithm)
  
  
  if (algorithm == "Metropolis"){
    
    if (length(start) != 1){warning("Metropolis Algorithm is univariate. Please adjust start to have length 1.")}
    if (length(lambda) != 1){warning("Metropolis Algorithm is not a tempering algorithm. Lambda will be set to 1.")}
    
    simulations <- Metropolis(n, start)
    
    
    
  }
  
  else if (algorithm == "MWG"){
    
    simulations <- Metropolis.Within.Gibbs(n, start)
    
  }
  
  
  
  
  
  else if (algorithm == "guidedMetropolis"){
    
    stop("Guided Metropolis Algorithm is not yet complete")
    
  }
  
  else {stop("Algorithm not recongnised. Please choose from 'Metropolis', 'guidedMetropolis")}
  
  
  return(simulations)
  
}



#Catch errors on input parameters
initialErrorCatch <- function(n, lambda, start, algorithm){
  
  if (n%%1 != 0){stop("n is the number of samples and must be a positive integer")}
  if (n < 2){stop("n must be greater than one.")}
  
  

  #Need to test the inputs here to ensure they are fine
  # Length of start must match dimension of model
}
